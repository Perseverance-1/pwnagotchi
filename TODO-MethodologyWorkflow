Pentest Methodology TODO list

If you found this know, I suck at coding and am trying to learn more by attemping to add to this fork with the knowledge 
I have about the hacker world. This will be an ongoing thing as I hope the main branch will be.

Plugins started and needs work:
    nmap.py for scanning post AP login
    brutespray.py for enumerating machine services

Other notes/ideas:
-Calculate proper reward values
-Stealthy, noisey? Highter reward based off most stealthy?
-Anonsurf, Streisand? 
-Higher reward for faster exploit
-Add SDR functionality?
-Fluxion functionality?
-Implement "Task hijacking" like "Strandhogg" 
    REF: promon.co
-Exfiltration plugin
    Idea from @GeekaBoos puzzle.
-Use multiple "gotchis" to tag team each phase?

From Pwnagotchi, bettercap:
    Scan networks, deauth, get key.

Implementations: *OFFENSIVE*
    crack key #added code to everywhere "pwnagotchi" folder
        *plugin quickdic does this* 
           
    Log into AP , use key #SET LIMIT FOR APs TO CONNECT TO?
        if {use.key}==true do;
            #macchanger -m{assoc.client.mac} #to stay stealthy, if manditory(mac filtering)? 
            nano /etc/wpa_supplicant.conf
                network={
                ssid="{current.ap}"
                psk="{use.key}"
                }
            wpa_supplicant -B -i {interface} -c /etc/wpa_supplicant.conf
                if output==true
                    do; {port.scan}
         else {recrack.cap}
         
    scan network for ports, os, version *nmap plugin started*
        Port scan
            if {port.scan}==true do;
                need arguments 
            elsif {ap.nmap}='no ports open' 
                *needs arguments in plugin
                
        sort from file and make into variable     
        Operating system(s)
            Computer
                Windows $os.win
                Linux $os.lin
                iOS $os.ios
                Other $os.other
            Phones
                Andriod $mob.and
                iOS $mob.ios
                Windows $mob.win
                Etc.
                Etc.
            IoT
                Roku $iot.roku
                Google Alexa/dot/home
                    $goog.alex
                    $goog.dot
                    $goog.home
                Etc.
                Etc.
        Version(s)
            windows 
                $ver.w.10
                $ver.w.8
                etc.
                etc.
            linux
                ubuntu $ver.l.u.18
                redhat $ver.l.r
                centos $ver.l.c
                etc.
                etc.
        concatinate, i.e'$os.win, $ver.8' each result{scan.result} and pass to {searchsploit} 
    
    Enumerate Machines and crack services
        *brutespray plugin started*
    
    Vuln Scan:
        Find most effective route. nmap, OpenVAS?
    Run scanned items through exploit db:
        use top 5 exploits that match closest to parameters?
        searchsploit {scan.result} > file to iterate through each for each{scan.result}
    Exploit:
        Auto compile from Exploitdb or keep local and execute?
        Machine creds
            from exploit or sniffing
    Create shell:
        Netcat
        Meterpreter
        Etc.
        Etc.
    Privilege Escalation
        exploits
    Persistence
        Determine risk\reward ratio?

Add rewards for items: *OFFENSIVE*
    Crack +5
    Port Scan
        Open_ports +.05
        hidden_open_ports +.1
        closed_ports -.001 (MAYBE?)
        Vuln_ports +1
    OS     <-- reward in conjuntion with os+version+quickness=reward?-->
        OS_w #Windows
        OS_l #Linux
        OS_i #iOS
        OS_t #Things
          t-Roku
          t-googleAlexa
          t-googledot
          t-etc
          t-etc
    Version
        Research most recent vulnerable versions
    Vuln
        vuln_total +.001*found    #Multiply by number of vulns found
        vuln_high    #higher severity=higher reward
        vuln_low    #lower severity=lower reward
    Exploit
        exploit_success +5
        exploit_fail -.05
    Creds
        cred_dump +.5*total #multiply by total
        cred_sniff +.5*total #multiply by total
        cred_admin +1*total #multiply by total
    Shell
        shell_success +.01
        shell_priv +5    #escalated privilege shell
        shell_fail -.01
    Persistence
        persist_success
        persist_fail

Implementations: *DEFENSIVE*
    Snort/Barnyard/BASE
    Hack Back upon verified attack fingerprint?
    
Add rewards for items: *DEFENSIVE*
    blocked_request    #one or multiple Ping size request
    blocked_attack    #Larger fingerprinted attack
    blocked_attack-m    #Multiple attacks from same IP
    blocked_attack-c    #Multiple attacks from same IP w/different
